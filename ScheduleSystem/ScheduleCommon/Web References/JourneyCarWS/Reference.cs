//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ScheduleCommon.JourneyCarWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckLoginV4OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleStatusListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleEventListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVehicleStatusListV3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataV4OperationCompleted;
        
        private System.Threading.SendOrPostCallback DanhSachSuKienByMaxIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DanhSachSuKienByMaxIdMultiSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateStatusLogChuyenOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestIPClientOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::ScheduleCommon.Properties.Settings.Default.ScheduleCommon_JourneyCarWS_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckLoginCompletedEventHandler CheckLoginCompleted;
        
        /// <remarks/>
        public event CheckLoginV4CompletedEventHandler CheckLoginV4Completed;
        
        /// <remarks/>
        public event GetVehicleStatusListCompletedEventHandler GetVehicleStatusListCompleted;
        
        /// <remarks/>
        public event GetVehicleEventListCompletedEventHandler GetVehicleEventListCompleted;
        
        /// <remarks/>
        public event GetVehicleStatusListV3CompletedEventHandler GetVehicleStatusListV3Completed;
        
        /// <remarks/>
        public event GetDataV4CompletedEventHandler GetDataV4Completed;
        
        /// <remarks/>
        public event DanhSachSuKienByMaxIdCompletedEventHandler DanhSachSuKienByMaxIdCompleted;
        
        /// <remarks/>
        public event DanhSachSuKienByMaxIdMultiSiteCompletedEventHandler DanhSachSuKienByMaxIdMultiSiteCompleted;
        
        /// <remarks/>
        public event UpdateStatusLogChuyenCompletedEventHandler UpdateStatusLogChuyenCompleted;
        
        /// <remarks/>
        public event TestSessionCompletedEventHandler TestSessionCompleted;
        
        /// <remarks/>
        public event TestIPClientCompletedEventHandler TestIPClientCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckLogin(string login_user_name, string login_password, string serial, string version) {
            object[] results = this.Invoke("CheckLogin", new object[] {
                        login_user_name,
                        login_password,
                        serial,
                        version});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckLoginAsync(string login_user_name, string login_password, string serial, string version) {
            this.CheckLoginAsync(login_user_name, login_password, serial, version, null);
        }
        
        /// <remarks/>
        public void CheckLoginAsync(string login_user_name, string login_password, string serial, string version, object userState) {
            if ((this.CheckLoginOperationCompleted == null)) {
                this.CheckLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckLoginOperationCompleted);
            }
            this.InvokeAsync("CheckLogin", new object[] {
                        login_user_name,
                        login_password,
                        serial,
                        version}, this.CheckLoginOperationCompleted, userState);
        }
        
        private void OnCheckLoginOperationCompleted(object arg) {
            if ((this.CheckLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckLoginCompleted(this, new CheckLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckLoginV4", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckLoginV4(string login_user_name, string login_password, string serial, string version) {
            object[] results = this.Invoke("CheckLoginV4", new object[] {
                        login_user_name,
                        login_password,
                        serial,
                        version});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckLoginV4Async(string login_user_name, string login_password, string serial, string version) {
            this.CheckLoginV4Async(login_user_name, login_password, serial, version, null);
        }
        
        /// <remarks/>
        public void CheckLoginV4Async(string login_user_name, string login_password, string serial, string version, object userState) {
            if ((this.CheckLoginV4OperationCompleted == null)) {
                this.CheckLoginV4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckLoginV4OperationCompleted);
            }
            this.InvokeAsync("CheckLoginV4", new object[] {
                        login_user_name,
                        login_password,
                        serial,
                        version}, this.CheckLoginV4OperationCompleted, userState);
        }
        
        private void OnCheckLoginV4OperationCompleted(object arg) {
            if ((this.CheckLoginV4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckLoginV4Completed(this, new CheckLoginV4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVehicleStatusList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVehicleStatusList(string ws_user_name, string ws_password, string login_user_name, string login_password, string serial) {
            object[] results = this.Invoke("GetVehicleStatusList", new object[] {
                        ws_user_name,
                        ws_password,
                        login_user_name,
                        login_password,
                        serial});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleStatusListAsync(string ws_user_name, string ws_password, string login_user_name, string login_password, string serial) {
            this.GetVehicleStatusListAsync(ws_user_name, ws_password, login_user_name, login_password, serial, null);
        }
        
        /// <remarks/>
        public void GetVehicleStatusListAsync(string ws_user_name, string ws_password, string login_user_name, string login_password, string serial, object userState) {
            if ((this.GetVehicleStatusListOperationCompleted == null)) {
                this.GetVehicleStatusListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleStatusListOperationCompleted);
            }
            this.InvokeAsync("GetVehicleStatusList", new object[] {
                        ws_user_name,
                        ws_password,
                        login_user_name,
                        login_password,
                        serial}, this.GetVehicleStatusListOperationCompleted, userState);
        }
        
        private void OnGetVehicleStatusListOperationCompleted(object arg) {
            if ((this.GetVehicleStatusListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleStatusListCompleted(this, new GetVehicleStatusListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVehicleEventList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVehicleEventList(string ws_user_name, string ws_password, string login_user_name, string login_password, string serial, System.DateTime date_frm) {
            object[] results = this.Invoke("GetVehicleEventList", new object[] {
                        ws_user_name,
                        ws_password,
                        login_user_name,
                        login_password,
                        serial,
                        date_frm});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleEventListAsync(string ws_user_name, string ws_password, string login_user_name, string login_password, string serial, System.DateTime date_frm) {
            this.GetVehicleEventListAsync(ws_user_name, ws_password, login_user_name, login_password, serial, date_frm, null);
        }
        
        /// <remarks/>
        public void GetVehicleEventListAsync(string ws_user_name, string ws_password, string login_user_name, string login_password, string serial, System.DateTime date_frm, object userState) {
            if ((this.GetVehicleEventListOperationCompleted == null)) {
                this.GetVehicleEventListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleEventListOperationCompleted);
            }
            this.InvokeAsync("GetVehicleEventList", new object[] {
                        ws_user_name,
                        ws_password,
                        login_user_name,
                        login_password,
                        serial,
                        date_frm}, this.GetVehicleEventListOperationCompleted, userState);
        }
        
        private void OnGetVehicleEventListOperationCompleted(object arg) {
            if ((this.GetVehicleEventListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleEventListCompleted(this, new GetVehicleEventListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVehicleStatusListV3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVehicleStatusListV3(string login_user_name, string login_password, string serial, string version) {
            object[] results = this.Invoke("GetVehicleStatusListV3", new object[] {
                        login_user_name,
                        login_password,
                        serial,
                        version});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVehicleStatusListV3Async(string login_user_name, string login_password, string serial, string version) {
            this.GetVehicleStatusListV3Async(login_user_name, login_password, serial, version, null);
        }
        
        /// <remarks/>
        public void GetVehicleStatusListV3Async(string login_user_name, string login_password, string serial, string version, object userState) {
            if ((this.GetVehicleStatusListV3OperationCompleted == null)) {
                this.GetVehicleStatusListV3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVehicleStatusListV3OperationCompleted);
            }
            this.InvokeAsync("GetVehicleStatusListV3", new object[] {
                        login_user_name,
                        login_password,
                        serial,
                        version}, this.GetVehicleStatusListV3OperationCompleted, userState);
        }
        
        private void OnGetVehicleStatusListV3OperationCompleted(object arg) {
            if ((this.GetVehicleStatusListV3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVehicleStatusListV3Completed(this, new GetVehicleStatusListV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataV4", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataV4(string login_user_name, string login_password, string serial, string version, int index) {
            object[] results = this.Invoke("GetDataV4", new object[] {
                        login_user_name,
                        login_password,
                        serial,
                        version,
                        index});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataV4Async(string login_user_name, string login_password, string serial, string version, int index) {
            this.GetDataV4Async(login_user_name, login_password, serial, version, index, null);
        }
        
        /// <remarks/>
        public void GetDataV4Async(string login_user_name, string login_password, string serial, string version, int index, object userState) {
            if ((this.GetDataV4OperationCompleted == null)) {
                this.GetDataV4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataV4OperationCompleted);
            }
            this.InvokeAsync("GetDataV4", new object[] {
                        login_user_name,
                        login_password,
                        serial,
                        version,
                        index}, this.GetDataV4OperationCompleted, userState);
        }
        
        private void OnGetDataV4OperationCompleted(object arg) {
            if ((this.GetDataV4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataV4Completed(this, new GetDataV4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DanhSachSuKienByMaxId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("DataSet")]
        public System.Data.DataSet[] DanhSachSuKienByMaxId(string login_user_name, string login_password, string serial, string version, int index, string trackId) {
            object[] results = this.Invoke("DanhSachSuKienByMaxId", new object[] {
                        login_user_name,
                        login_password,
                        serial,
                        version,
                        index,
                        trackId});
            return ((System.Data.DataSet[])(results[0]));
        }
        
        /// <remarks/>
        public void DanhSachSuKienByMaxIdAsync(string login_user_name, string login_password, string serial, string version, int index, string trackId) {
            this.DanhSachSuKienByMaxIdAsync(login_user_name, login_password, serial, version, index, trackId, null);
        }
        
        /// <remarks/>
        public void DanhSachSuKienByMaxIdAsync(string login_user_name, string login_password, string serial, string version, int index, string trackId, object userState) {
            if ((this.DanhSachSuKienByMaxIdOperationCompleted == null)) {
                this.DanhSachSuKienByMaxIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDanhSachSuKienByMaxIdOperationCompleted);
            }
            this.InvokeAsync("DanhSachSuKienByMaxId", new object[] {
                        login_user_name,
                        login_password,
                        serial,
                        version,
                        index,
                        trackId}, this.DanhSachSuKienByMaxIdOperationCompleted, userState);
        }
        
        private void OnDanhSachSuKienByMaxIdOperationCompleted(object arg) {
            if ((this.DanhSachSuKienByMaxIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DanhSachSuKienByMaxIdCompleted(this, new DanhSachSuKienByMaxIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DanhSachSuKienByMaxIdMultiSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("DataSet")]
        public System.Data.DataSet[] DanhSachSuKienByMaxIdMultiSite(string login_user_name, string login_password, string serial, string version, int index, string trackId, string webSite) {
            object[] results = this.Invoke("DanhSachSuKienByMaxIdMultiSite", new object[] {
                        login_user_name,
                        login_password,
                        serial,
                        version,
                        index,
                        trackId,
                        webSite});
            return ((System.Data.DataSet[])(results[0]));
        }
        
        /// <remarks/>
        public void DanhSachSuKienByMaxIdMultiSiteAsync(string login_user_name, string login_password, string serial, string version, int index, string trackId, string webSite) {
            this.DanhSachSuKienByMaxIdMultiSiteAsync(login_user_name, login_password, serial, version, index, trackId, webSite, null);
        }
        
        /// <remarks/>
        public void DanhSachSuKienByMaxIdMultiSiteAsync(string login_user_name, string login_password, string serial, string version, int index, string trackId, string webSite, object userState) {
            if ((this.DanhSachSuKienByMaxIdMultiSiteOperationCompleted == null)) {
                this.DanhSachSuKienByMaxIdMultiSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDanhSachSuKienByMaxIdMultiSiteOperationCompleted);
            }
            this.InvokeAsync("DanhSachSuKienByMaxIdMultiSite", new object[] {
                        login_user_name,
                        login_password,
                        serial,
                        version,
                        index,
                        trackId,
                        webSite}, this.DanhSachSuKienByMaxIdMultiSiteOperationCompleted, userState);
        }
        
        private void OnDanhSachSuKienByMaxIdMultiSiteOperationCompleted(object arg) {
            if ((this.DanhSachSuKienByMaxIdMultiSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DanhSachSuKienByMaxIdMultiSiteCompleted(this, new DanhSachSuKienByMaxIdMultiSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStatusLogChuyen", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateStatusLogChuyen(string login_user_name, string login_password, string serial, string version, string ids) {
            object[] results = this.Invoke("UpdateStatusLogChuyen", new object[] {
                        login_user_name,
                        login_password,
                        serial,
                        version,
                        ids});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateStatusLogChuyenAsync(string login_user_name, string login_password, string serial, string version, string ids) {
            this.UpdateStatusLogChuyenAsync(login_user_name, login_password, serial, version, ids, null);
        }
        
        /// <remarks/>
        public void UpdateStatusLogChuyenAsync(string login_user_name, string login_password, string serial, string version, string ids, object userState) {
            if ((this.UpdateStatusLogChuyenOperationCompleted == null)) {
                this.UpdateStatusLogChuyenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateStatusLogChuyenOperationCompleted);
            }
            this.InvokeAsync("UpdateStatusLogChuyen", new object[] {
                        login_user_name,
                        login_password,
                        serial,
                        version,
                        ids}, this.UpdateStatusLogChuyenOperationCompleted, userState);
        }
        
        private void OnUpdateStatusLogChuyenOperationCompleted(object arg) {
            if ((this.UpdateStatusLogChuyenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateStatusLogChuyenCompleted(this, new UpdateStatusLogChuyenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestSession", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestSession(string login_user_name, string login_password) {
            object[] results = this.Invoke("TestSession", new object[] {
                        login_user_name,
                        login_password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestSessionAsync(string login_user_name, string login_password) {
            this.TestSessionAsync(login_user_name, login_password, null);
        }
        
        /// <remarks/>
        public void TestSessionAsync(string login_user_name, string login_password, object userState) {
            if ((this.TestSessionOperationCompleted == null)) {
                this.TestSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestSessionOperationCompleted);
            }
            this.InvokeAsync("TestSession", new object[] {
                        login_user_name,
                        login_password}, this.TestSessionOperationCompleted, userState);
        }
        
        private void OnTestSessionOperationCompleted(object arg) {
            if ((this.TestSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestSessionCompleted(this, new TestSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestIPClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestIPClient() {
            object[] results = this.Invoke("TestIPClient", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestIPClientAsync() {
            this.TestIPClientAsync(null);
        }
        
        /// <remarks/>
        public void TestIPClientAsync(object userState) {
            if ((this.TestIPClientOperationCompleted == null)) {
                this.TestIPClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestIPClientOperationCompleted);
            }
            this.InvokeAsync("TestIPClient", new object[0], this.TestIPClientOperationCompleted, userState);
        }
        
        private void OnTestIPClientOperationCompleted(object arg) {
            if ((this.TestIPClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestIPClientCompleted(this, new TestIPClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CheckLoginCompletedEventHandler(object sender, CheckLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CheckLoginV4CompletedEventHandler(object sender, CheckLoginV4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckLoginV4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckLoginV4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetVehicleStatusListCompletedEventHandler(object sender, GetVehicleStatusListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleStatusListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleStatusListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetVehicleEventListCompletedEventHandler(object sender, GetVehicleEventListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleEventListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleEventListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetVehicleStatusListV3CompletedEventHandler(object sender, GetVehicleStatusListV3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVehicleStatusListV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVehicleStatusListV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetDataV4CompletedEventHandler(object sender, GetDataV4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataV4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataV4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DanhSachSuKienByMaxIdCompletedEventHandler(object sender, DanhSachSuKienByMaxIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DanhSachSuKienByMaxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DanhSachSuKienByMaxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DanhSachSuKienByMaxIdMultiSiteCompletedEventHandler(object sender, DanhSachSuKienByMaxIdMultiSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DanhSachSuKienByMaxIdMultiSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DanhSachSuKienByMaxIdMultiSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateStatusLogChuyenCompletedEventHandler(object sender, UpdateStatusLogChuyenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateStatusLogChuyenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateStatusLogChuyenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void TestSessionCompletedEventHandler(object sender, TestSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void TestIPClientCompletedEventHandler(object sender, TestIPClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestIPClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestIPClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591